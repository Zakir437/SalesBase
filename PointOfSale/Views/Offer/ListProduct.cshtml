<div class="row" style="margin:0">
    <div class="col-md-3">
        @(Html.Kendo().DropDownList()
            .Name("Category")
            .BindTo(ViewBag.CategoryList as SelectList)
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel("--Select One Category--")
            .HtmlAttributes(new { style = "width:100%" })
            .Events(e =>
            {
                e.Change("onChangeCategory");
            })
        )
    </div>
    <div class="col-md-3">
        @(Html.Kendo().DropDownList()
            .Name("SubCategory")
            .HtmlAttributes(new { style = "width:100%" })
            .OptionLabel("--Select Sub Category--")
            .DataTextField("Text")
            .DataValueField("Value")
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("GetSubCategories", "Offer")
                        .Data("filterCategory");
                })
                .ServerFiltering(true);
            })
            .Enable(false)
            .AutoBind(false)
            .CascadeFrom("Category")
            .Events(e =>
            {
                e.Change("onChangeSubCategory");
            })
        )
        <script>
            //filter sub category by category
            function filterCategory() {
                return {
                    categoryId: $("#Category").val()
                };
            }
        </script>
    </div>
    @*<div class="col-md-3" id="divPointsValue">
        <label>Points</label>
        <input type="number" min="0" class="k-textbox" style="max-width:30%" id="points" required validationMessage="*" />
    </div>*@
    <div class="col-md-3">
        @(Html.Kendo().DropDownList()
            .Name("TagDropdown")
            .OptionLabel("--Select One Tag--")
            .HtmlAttributes(new { style = "width:100%; max-width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .Filter("contains")
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("GetTag", "Offer");
                })
                .ServerFiltering(false);
            })
            .Events(e =>
            {
                e.Change("onChangeTag");
            })
        )
    </div>
    <div class="col-md-3">
        @(Html.Kendo().AutoComplete()
            .Name("productsAutoComplete")
            .Placeholder("Type product name...")
            .HtmlAttributes(new { style = "width:100%; max-width:100%" })
            .MinLength(3)
            .DataTextField("Text")
            .Filter("contains")
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("GetProductListForText", "Offer").Data("additionInfo");
                })
                .ServerFiltering(true);
            })
            .Events(e =>
            {
                e.Change("onChangeProduct").Select("onSelect");
            })
        )
        <span class="k-icon k-i-search" style="margin-top:-25px;float:right;margin-right:10px; position:relative">&nbsp;</span>
    </div>
</div>
<div class="row" style="margin:0; margin-top:5px;">
    <div class="col-md-12">
        <div id="divProductList">
            <table class="table table-bordered table-hover table-responsive table-condensed table-striped" id="tblProducts">
                <thead>
                    <tr>
                        <th>@Html.CheckBox("checkAll", new { htmlattributes = new { @class = "k-textbox" } })</th>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Points</th>
                    </tr>
                    <tr id="emptyRow">
                        <td colspan="4"><h4>There is no record to display</h4></td>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <div class="text-right">
            <button class="btn btn-default" id="btnRefresh"><span class="k-icon k-i-refresh"></span> Refresh</button>
            <a class="btn btn-default btnBox" href="/Offer/OfferCreate">
                <span class="k-icon k-cancel"></span> Cancel
            </a>
        </div>
    </div>
</div>
<script>

    $("#btnRefresh").click(function () {
        location.reload();
    });

    //Check/uncheck all
    $("#checkAll").click(function () {
        if ($(this).is(":checked")) {
            $(".Products").each(function () {
                id = parseInt($(this).data("id"));
                $("#check_" + id).prop('checked', true);
                if (selectedIds.indexOf(id) == -1) {
                    selectedIds.push(id);
                }
            });
            $("#btnSave").prop('disabled', false);
        }
        else {
            $(".Products").each(function () {
                id = parseInt($(this).data("id"));
                $("#check_" + id).prop('checked', false);
            });
            $("#btnSave").prop('disabled', true);
            selectedIds = [];
        }
    });

    //check/uncheck single
    $("#divProductList").on('click', '.check', function () {
        id = $(this).data("id");
        if ($("#check_" + id).is(":checked")) {
            if (selectedIds.indexOf(id) == -1)
            {
                selectedIds.push(id);
            }
        }
        else
        {
            selectedIds = selectedIds.filter(item => item !== id);
        }
        var checkAll = true;
        $('.check').each(function () {
            id = parseInt($(this).data("id"));
            if ($("#check_" + id).is(":checked") == false) {
                checkAll = false;
            }
        });
        if (checkAll) {
            $("#checkAll").prop('checked', true);
        }
        else {
            $("#checkAll").prop('checked', false);
        }
        if ($("#divProductList .check:checked").length > 0) {
            $("#btnSave").prop('disabled', false);
        }
        else {
            $("#btnSave").prop('disabled', true);
        }
    });

</script>