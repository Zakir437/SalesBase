@model PointOfSale.Models.ViewOffer
@using System.Globalization
@{
    ViewBag.Title = "OfferItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
    PointOfSale.Models.PointOfSale_DBEntities db = new PointOfSale.Models.PointOfSale_DBEntities();
}
<style>
    .selected {
        border: 1px solid #483c3c;
    }
    input[type=number] {
        width: 100%;
        max-width: 100%;
        padding-left: 8px;
    }
</style>
<div class="panel panel-default" style="margin-top:20px;">
    <div class="panel-heading" style="padding-bottom:46px;">
        <div class="pull-left">
            <h4 class="uppercase">Offer Items</h4>
        </div>
        <div class="pull-right">
            <a class="btn btn-default" href="/PointOfSale/CustomOffer"><i class="fa fa-arrow-left"></i> Back</a>
        </div>
    </div>
    <div class="panel-body">
        <div class="col-md-5">
            <dl class="dl-horizontal">
                <dt>Offer Name</dt>
                <dd>@Model.OfferName</dd>
                <dt>Total Price</dt>
                <dd>@Model.OfferPrice.ToString("C", new CultureInfo("bn-BD"))</dd>
                <dt>Validity</dt>
                <dd>@Convert.ToDateTime(Model.Validity).ToString("MMM dd,yyyy hh:mm:ss tt")</dd>
                @if (Model.ScheduleId > 0)
                 {
                    <dt>Time Schedule</dt>
                    <dd>@Model.ScheduleName</dd>
                 }
                <dt>Created By</dt>
                <dd>@Model.CreatedBy</dd>
                <dt>Created Date</dt>
                <dd>@Convert.ToDateTime(Model.CreatedDate).ToString("MMM dd,yyyy")</dd>
                @if (Model.UpdatedDate != null)
                 {
                    <dt>Updated By</dt>
                    <dd>@Model.UpdatedBy</dd>
                    <dt>Updated Date</dt>
                    <dd>@Convert.ToDateTime(Model.UpdatedDate).ToString("MMM dd,yyyy")</dd>
                 }
            </dl>
        </div>
        <div class="col-md-3"></div>
        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>Actual Price</dt>
                <dd>
                    <span id="actualPrice">@Model.ActualPrice</span>
                </dd>
                <dt>Offer Price</dt>
                <dd>
                    <span id="offerPrice">@Model.OfferPrice</span>
                </dd>
                <dt>Discount Percentage</dt>
                <dd>
                    <span id="discPercentage">@Model.DiscPercentage</span>%
                </dd>
                <dt>Discount Amount</dt>
                <dd>
                    <span id="discAmount">@Model.DiscAmount</span>Tk
                </dd>
            </dl>
        </div>
    </div>
    <hr style="margin:0;"/>
    <div class="panel-body">
        <div class="row" style="margin: 0;">
            <div class="col-md-6">
                <div id="divProductAutoComplete">
                    @(Html.Kendo().AutoComplete()
                            .Name("productsAutoComplete")
                            .Placeholder("Type product name...")
                            .HtmlAttributes(new { style = "width:100%; max-width:100%" })
                            .MinLength(3)
                            .DataTextField("Text")
                            .Filter("contains")
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetProductListForText", "PointOfSale").Data("additionInfo");
                                })
                               .ServerFiltering(true);
                            })
                            .Events(e =>
                            {
                                e.Change("onChangeText").Select("onSelect");
                            })
                    )
                    <span class="k-icon k-i-search" style="margin-top:-25px;float:right;margin-right:10px; position:relative">&nbsp;</span>
                </div>
                @*<div id="divCategoryAutocomplete">
                    @(Html.Kendo().AutoComplete()
                            .Name("categoryAutocomplete")
                            .Placeholder("Type category name...")
                            .HtmlAttributes(new { style = "width:100%; max-width:100%" })
                            .MinLength(3)
                            .DataTextField("Text")
                            .Filter("contains")
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetCategory", "Configuration").Data("CategoryAdditionInfo");
                                })
                               .ServerFiltering(true);
                            })
                            .Events(e =>
                            {
                                e.Change("onChangeCategory").Select("onSelectCategory");
                            })
                    )
                    <span class="k-icon k-i-search" style="margin-top:-25px;float:right;margin-right:10px; position:relative">&nbsp;</span>
                </div>*@
            </div>
            <div class="col-md-6">
                @*<button class="btn btn-default selected" id="btnProductAutocomplete">Product</button>
                <button class="btn btn-default" id="btnCategoryAutocomplete">Category</button>*@
            </div>
        </div>
        <div class="row" style="margin:0; margin-top:5px;">
            <div class="col-md-12">
                <div id="divOfferItemList"></div>
                <div class="text-right">
                    <button class="btn btn-default" id="btnOfferItemSave"><span class="k-icon k-update"></span> Save</button>
                    <button class="btn btn-default" id="btnOfferItemRefresh"><span class="k-icon k-i-refresh"></span> Refresh</button>
                    <a class="btn btn-default" href="/PointOfSale/CustomOffer"><span class="k-icon k-cancel"></span> Cancel</a>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var productId = 0,categoryId = 0, selectedOne, productPrice = 0, count = 0, id = 0;
    var actualPrice = 0, offerPrice = 0, discAmount = 0, discPercent = 0, discPrice = 0;
    var quantity = 0, discOff = 0, amountOff = 0;
    var validation;
    var deleteItemIds = [];
    $(document).ready(function () {
        $("#divCategoryAutocomplete").hide();
        $('[data-toggle="tooltip"]').tooltip();
        $("#divOfferItemList").append('<div class="loading_partial"></div>');
        $("#divOfferItemList").load('@Url.Action("OfferItemList", "PointOfSale")?offerId=' + '@Model.Id');
        validation = $("#divOfferItemList").kendoValidator().data("kendoValidator");
    });

    $("#btnOfferItemRefresh").click(function () {
        location.reload();
    });

    //*******************Product Autocomplete**************
    function onChangeText()
    {
        $("#productsAutoComplete").data("kendoAutoComplete").value("");
    }
    function onSelect(e)
    {
        selectedOne = this.dataItem(e.item.index());
        productId = selectedOne.Value;
        $.ajax({
            url: '/PointOfSale/GetProductInfoById',
            type: "GET",
            data: { productId: productId },
            success: function (data)
            {
                if (data === "error")
                {
                    alert("Product not found");
                    return 0;
                }
                else {
                    $(data).each(function (index, item) {
                        if ($("#emptyRow").length == 1) {
                            $("#emptyRow").hide();
                        }
                        count++;
                        $("#tblOfferItems").append('<tr id="offerItem_' + count + '" class="offerItem" data-id="' + count + '" data-productid="' + productId + '" data-transid="0">' +
                            '<td>' + item.ProductName + '</td>' +
                            '<td>' + item.CategoryName + '</td>' +
                            '<td>' +
                            '<span id="productPrice_' + count + '">'+ item.Price +'</span>'+
                            '</td>' +
                            '<td>' +
                            '<input type="number" min="1" value="1" id="quantity_' + count + '" name="quantity_' + count + '" onclick="calculateDiscount(' + count + ',1)"  onkeyup="calculateDiscount(' + count + ',1)" class="quantity" data-id="' + count + '" required validationMessage="*"/>' +
                            '<span class="field-validation-valid text-danger" data-valmsg-for="quantity_' + count + '" data-valmsg-replace="true"></span>' +
                            '</td>' +
                            '<td>' +
                            '<label><input type="checkbox" data-id="' + count + '" class="chkFree" id="chkFree_' + count + '"  onclick="calculateDiscount(' + count + ',2)"/> Free</label>' +
                            '</td>' +
                            '<td>' +
                            '<input type="number" min="0" max="100" id="percentOff_' + count + '" name="percentOff_' + count + '" class="percentOff" data-id="' + count + '" onchange="changeHandler(this)" onclick="calculateDiscount(' + count + ',3)"  onkeyup="calculateDiscount(' + count + ',3)" value="0" required validationMessage="*"/>' +
                            '<span class="field-validation-valid text-danger" data-valmsg-for="percentOff_' + count + '" data-valmsg-replace="true"></span>' +
                            '</td>' +
                            '<td>' +
                            '<input type="number" min="0" max="' + item.Price + '" id="amountOff_' + count + '" class="amountOff" data-id="' + count + '" name="amountOff_' + count + '" onclick="calculateDiscount(' + count + ',4)"  onkeyup="calculateDiscount(' + count + ',4)" value="0" required validationMessage="*"/>' +
                            '<span class="field-validation-valid text-danger" data-valmsg-for="amountOff_' + count + '" data-valmsg-replace="true"></span>' +
                            '</td>' +
                            '<td>' +
                            '<input type="number" min="0" readonly id="discPrice_' + count + '" data-id="' + count + '" value="' + item.Price +'" />' +
                            '</td>' +
                            '<td>' +
                            '<span class="btnCancelItem" data-id="' + count + '" data-toggle="tooltip" title="Cancel item"><i class="fa fa-times" aria-hidden="true" style="font-size:24px;cursor:pointer"></i></span>' +
                            '</td>' +
                            '</tr > ');
                        calculateOffer();
                    });
                }
            }
        });
    }
    //product autocomplete additonal info
    function additionInfo() {
        return {
            text: $("#productsAutoComplete").val()
        }
    }

    //*************************Category Autocomplete********************************
    function onChangeCategory()
    {
        $("#categoryAutocomplete").data("kendoAutoComplete").value("");
    }
    function onSelectCategory(e)
    {
        selectedOne = this.dataItem(e.item.index());
        categoryId = selectedOne.Value;
        $.ajax({
            url: '/Configuration/GetCategory',
            type: "GET",
            data: { categoryId: categoryId },
            success: function (data) {
                if (data === "error") {
                    alert("Category not found");
                    return 0;
                }
                else {
                    $(data).each(function (index, item) {
                        if ($("#emptyRow").length == 1) {
                            $("#emptyRow").hide();
                            $("#btnOfferItemSave").prop('disabled', false);
                        }
                        count++;
                        $("#tblOfferItems").append('<tr id="offerItem_' + count + '" class="offerItem" data-id="' + count + '" data-categoryid="' + categoryId + '" data-transid="0">' +
                            '<td></td>' +
                            '<td>' + item.CategoryName + '</td>' +
                            '<td>' +
                            '<span id="productPrice_' + count + '">0</span>' +
                            '</td>' +
                            '<td>' +
                            '<input type="number" min="1" value="1" id="quantity_' + count + '" name="quantity_' + count + '" onclick="calculateDiscount(' + count + ',1)"  onkeyup="calculateDiscount(' + count + ',1)" class="quantity" data-id="' + count + '" required validationMessage="*"/>' +
                            '<span class="field-validation-valid text-danger" data-valmsg-for="quantity_' + count + '" data-valmsg-replace="true"></span>' +
                            '</td>' +
                            '<td>' +
                            '<label><input type="checkbox" data-id="' + count + '" class="chkFree" id="chkFree_' + count + '"  onclick="calculateDiscount(' + count + ',2)"/> Free</label>' +
                            '</td>' +
                            '<td>' +
                            '<input type="number" min="0" max="100" id="percentOff_' + count + '" name="percentOff_' + count + '" class="percentOff" data-id="' + count + '" onchange="changeHandler(this)"  onclick="calculateDiscount(' + count + ',3)"  onkeyup="calculateDiscount(' + count + ',3)" value="0" required validationMessage="*"/>' +
                            '<span class="field-validation-valid text-danger" data-valmsg-for="percentOff_' + count + '" data-valmsg-replace="true"></span>' +
                            '</td>' +
                            '<td>' +
                            '<input type="number" min="0" max="' + item.Price + '" id="amountOff_' + count + '" class="amountOff" data-id="' + count + '" name="amountOff_' + count + '" onclick="calculateDiscount(' + count + ',4)"  onkeyup="calculateDiscount(' + count + ',4)" value="0" required validationMessage="*"/>' +
                            '<span class="field-validation-valid text-danger" data-valmsg-for="amountOff_' + count + '" data-valmsg-replace="true"></span>' +
                            '</td>' +
                            '<td>' +
                            '<input type="number" min="0" readonly id="discPrice_' + count + '" data-id="' + count + '" value="' + item.Price + '" />' +
                            '</td>' +
                            '<td>' +
                            '<span class="btnCancelItem" data-id="' + count + '" data-toggle="tooltip" title="Cancel item"><i class="fa fa-times" aria-hidden="true" style="font-size:24px;cursor:pointer"></i></span>' +
                            '</td>' +
                            '</tr > ');

                        calculateOffer();
                    });
                }
            }
        });
    }
    function CategoryAdditionInfo()
    {
        return {
            text: $("#categoryAutocomplete").val()
        }
    }

    $("#btnProductAutocomplete").click(function () {
        $(this).addClass('selected');
        $("#btnCategoryAutocomplete").removeClass('selected');

        $("#divProductAutoComplete").show();
        $("#divCategoryAutocomplete").hide();
    });

    $("#btnCategoryAutocomplete").click(function () {
        $(this).addClass('selected');
        $("#btnProductAutocomplete").removeClass('selected');
        $("#divProductAutoComplete").hide();
        $("#divCategoryAutocomplete").show();
    });

    function changeHandler(val) {
        if (Number(val.value) > 100) {
            val.value = 100;
        }
        else if (Number(val.value) <= 0) {
            val.value = 0;
        }
    }

    function calculateDiscount(id, type)
    {
        if ($("#quantity_" + id).val() > 0)
        {
            quantity = parseFloat($("#quantity_" + id).val());;
        }
        else {
            quantity = 1;
        }
        if ($("#percentOff_" + id).val() > 0)
        {
            discOff = parseFloat($("#percentOff_" + id).val());
        }
        else {
            discOff = 0;
        }
        if (discOff > 100)
        {
            discOff = 100;
        }

        if ($("#amountOff_" + id).val() > 0) {
            amountOff = parseFloat($("#amountOff_" + id).val());
        }
        else {
            amountOff = 0;
        }
        productPrice = parseFloat($("#productPrice_" + id).text()) * quantity;
        if (type == 1 || type == 3) // calculate if quantity change or percentage off change
        {
            amountOff = productPrice * (discOff / 100);
            discPrice = productPrice - amountOff;
            $("#discPrice_" + id).val(discPrice.toFixed(2));
            $("#amountOff_" + id).val(amountOff.toFixed(2));

            if (discOff == 100)
            {
                $("#chkFree_" + id).prop('checked', true);
            }
            else {
                $("#chkFree_" + id).prop('checked', false);
            }
        }
        else if (type == 2) // calculate if check free change
        {
            if ($("#chkFree_" + id).is(':checked')) {
                $("#discPrice_" + id).val(0.00);
                $("#amountOff_" + id).val(productPrice.toFixed(2));
                $("#percentOff_" + id).val(100);
            }
            else
            {
                $("#discPrice_" + id).val(productPrice.toFixed(2));
                $("#amountOff_" + id).val(0);
                $("#percentOff_" + id).val(0);
            }
        }
        else if (type == 4) // calculate if amount off change
        {
            discOff = (amountOff / productPrice) * 100;
            discPrice = productPrice - amountOff;
            $("#discPrice_" + id).val(discPrice.toFixed(2));
            $("#percentOff_" + id).val(discOff.toFixed(2));

            if (discOff == 100) {
                $("#chkFree_" + id).prop('checked', true);
            }
            else {
                $("#chkFree_" + id).prop('checked', false);
            }
        }
        calculateOffer();
    }
    function calculateOffer()
    {
        actualPrice = 0;
        offerPrice = 0;
        $(".offerItem").each(function () {
            id = $(this).data("id");
            if ($("#quantity_" + id).val() > 0) {
                quantity = parseFloat($("#quantity_" + id).val());
            }
            else
            {
                quantity = 1;
            }
            productPrice = parseFloat($("#productPrice_" + id).text()) * quantity;
            actualPrice = actualPrice + productPrice;
            discPrice = parseFloat($("#discPrice_" + id).val());
            offerPrice = offerPrice + discPrice;
        });

        $("#actualPrice").empty();
        $("#actualPrice").append(actualPrice.toFixed(2));

        $("#offerPrice").empty();
        $("#offerPrice").append(offerPrice.toFixed(2));

        discAmount = actualPrice - offerPrice;
        if (discAmount == 0) {
            discPercent = 0
        }
        else {
            discPercent = (discAmount / actualPrice) * 100;
        }
        $("#discPercentage").empty();
        $("#discPercentage").append(discPercent.toFixed(2));

        $("#discAmount").empty();
        $("#discAmount").append(discAmount.toFixed(2));
    }

    //cancel item
    $("#divOfferItemList").on('click', '.btnCancelItem', function () {
        var transId = parseInt($(this).data("transid"));
        if (transId > 0)
        {
            deleteItemIds.push(transId);
        }
        id = parseInt($(this).data("id"));
        $("#offerItem_" + id).remove();
        calculateOffer();

        var row_count = $('#tblOfferItems').find('tr').length;
        if (row_count == 2)
        {
            $("#emptyRow").show();
            $("#btnOfferItemSave").prop('disabled', true);
        }
    });

    // offeritem Save 
    $("#btnOfferItemSave").click(function () {
        if (validation.validate())
        {
            var offerItem = [];
            var isFree = false;
            $('.offerItem').each(function () {
                id = parseInt($(this).data("id"));
                if ($("#chkFree_" + id).is(':checked'))
                {
                    isFree = true;
                }
                else {
                    isFree = false;
                }
                offerItem.push({
                    Id: parseInt($(this).data("transid")),
                    OfferId: '@Model.Id',
                    Type: 2, // type 2 for sale offer
                    ProductId: parseInt($(this).data("productid")),
                    IsFree: isFree,
                    PercentageOff: $("#percentOff_" + id).val(),
                    AmountOff: $("#amountOff_" + id).val(),
                    Quantity: $("#quantity_" + id).val(),
                    Price: $("#discPrice_" + id).val(),
                    CreatedBy : userId
                });
            });
            var offer = {
                Id : "@Model.Id",
                ActualPrice: parseFloat($("#actualPrice").text()),
                OfferPrice: parseFloat($("#offerPrice").text()),
                DiscPercentage: parseFloat($("#discPercentage").text()),
                DiscAmount: parseFloat($("#discAmount").text()),
                UpdatedBy: userId
            }
            $.ajax({
                url: '/PointOfSale/OfferItemSave',
                type: "POST",
                data: JSON.stringify({ offer: offer, items: offerItem, deleteItemIds: deleteItemIds }),
                contentType: 'application/json',
                success: function (data)
                {
                    if (data == "success")
                    {
                        location.href = '/PointOfSale/CustomOffer';
                    }
                    else {
                        alert("Save error...");
                    }
                }
            });


        }
    });






</script>